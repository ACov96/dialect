
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statement_listleftPLUSMINUSleftMULTIPLYDIVIDEAND ATOM BANG BOOL COLON COMMA DIVIDE ELIF ELSE END EQUAL EXIT FUN GT ID IF IMPORT LBRACE LBRACKET LPAREN LT MAC MINUS MULTIPLY NOT NULL NUMBER OR PLACEHOLDER PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING WHILEstatement_list : statement statement_list\n                      | emptyempty :statement : IMPORT STRING SEMICOLONstatement : assignment SEMICOLONstatement : conditionalstatement : expr SEMICOLONstatement : macro_defstatement : macro_callassignment : l_value EQUAL r_valuestatement : looploop : WHILE LPAREN expr RPAREN LBRACE statement_list RBRACEstatement : fun_deffun_def : FUN ID LPAREN id_list RPAREN LBRACE statement_list RBRACEstatement : RETURN expr SEMICOLONid_list : IDid_list : ID COMMA id_listid_list : emptyconditional : IF LPAREN expr RPAREN LBRACE statement_list RBRACE conditional_elif conditional_elseconditional_elif : ELIF LPAREN expr RPAREN LBRACE statement_list RBRACE conditional_elifconditional_elif : emptyconditional_else : ELSE LBRACE statement_list RBRACEconditional_else : emptyr_value : exprl_value : IDl_value : ID fieldsl_value : PLACEHOLDERl_value : PLACEHOLDER fieldsfields : LBRACKET expr RBRACKETfields : LBRACKET expr RBRACKET fieldsexpr : alg_opexpr : STRINGexpr : NUMBERexpr : BOOLexpr : NULLexpr : func_callexpr : IDexpr : LPAREN expr RPAREN func_call : ID LPAREN arg_list RPARENarg_list : emptyarg_list : exprarg_list : expr COMMA arg_listalg_op : expr PLUS expr\n               | expr MINUS expr\n               | expr MULTIPLY expr\n               | expr DIVIDE exprexpr : LBRACKET arg_list RBRACKETexpr : LBRACE record_list RBRACEexpr : LPAREN statement_list RPARENrecord_list : ID COLON exprrecord_list : ID COLON expr COMMA record_listrecord_list : emptyexpr : expr LBRACKET expr RBRACKETexpr : comp_opexpr : PLACEHOLDERcomp_op : expr EQUAL EQUAL exprcomp_op : expr BANG EQUAL exprcomp_op : expr GT exprcomp_op : expr GT EQUAL exprcomp_op : expr LT exprcomp_op : expr LT EQUAL exprexpr : log_oplog_op : expr AND exprlog_op : expr OR exprlog_op : NOT exprmacro_def : MAC macro_def_arg_list LBRACE statement_list RBRACEmacro_def_arg_list : ATOM macro_def_arg_list_recmacro_def_arg_list_rec : PLACEHOLDER macro_def_arg_list_recmacro_def_arg_list_rec : ATOM macro_def_arg_list_recmacro_def_arg_list_rec : emptymacro_call : ATOM macro_arg_list SEMICOLONmacro_arg_list : ATOM macro_arg_listmacro_arg_list : expr macro_arg_listmacro_arg_list : empty'
    
_lr_action_items = {'IMPORT':([0,2,7,9,10,11,12,16,35,36,75,89,101,107,130,133,134,141,142,143,145,147,148,149,151,153,157,158,160,161,],[4,4,-6,-8,-9,-11,-13,4,-5,-7,-4,-15,4,-71,4,-66,4,4,-3,-12,-3,-21,-14,-19,-23,4,-22,4,-3,-20,]),'RETURN':([0,2,7,9,10,11,12,16,35,36,75,89,101,107,130,133,134,141,142,143,145,147,148,149,151,153,157,158,160,161,],[13,13,-6,-8,-9,-11,-13,13,-5,-7,-4,-15,13,-71,13,-66,13,13,-3,-12,-3,-21,-14,-19,-23,13,-22,13,-3,-20,]),'$end':([0,1,2,3,7,9,10,11,12,33,35,36,75,89,107,133,142,143,145,147,148,149,151,157,160,161,],[-3,0,-3,-2,-6,-8,-9,-11,-13,-1,-5,-7,-4,-15,-71,-66,-3,-12,-3,-21,-14,-19,-23,-22,-3,-20,]),'IF':([0,2,7,9,10,11,12,16,35,36,75,89,101,107,130,133,134,141,142,143,145,147,148,149,151,153,157,158,160,161,],[15,15,-6,-8,-9,-11,-13,15,-5,-7,-4,-15,15,-71,15,-66,15,15,-3,-12,-3,-21,-14,-19,-23,15,-22,15,-3,-20,]),'STRING':([0,2,4,5,7,9,10,11,12,13,16,18,19,20,21,22,24,25,27,29,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,60,61,68,70,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,107,109,112,113,114,115,116,119,130,133,134,141,142,143,145,147,148,149,151,152,153,157,158,160,161,],[5,5,34,-32,-6,-8,-9,-11,-13,5,5,-31,-33,-34,-35,-36,5,-54,-62,5,5,-5,-7,5,5,5,5,5,5,5,5,5,-37,-55,5,5,5,5,5,5,5,-65,-4,-43,-44,-45,-46,5,5,-58,5,-60,5,-63,-64,-15,-38,-49,-48,5,-47,5,5,-71,5,-53,-56,-57,-59,-61,-39,5,-66,5,5,-3,-12,-3,-21,-14,-19,-23,5,5,-22,5,-3,-20,]),'NUMBER':([0,2,5,7,9,10,11,12,13,16,18,19,20,21,22,24,25,27,29,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,60,61,68,70,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,107,109,112,113,114,115,116,119,130,133,134,141,142,143,145,147,148,149,151,152,153,157,158,160,161,],[19,19,-32,-6,-8,-9,-11,-13,19,19,-31,-33,-34,-35,-36,19,-54,-62,19,19,-5,-7,19,19,19,19,19,19,19,19,19,-37,-55,19,19,19,19,19,19,19,-65,-4,-43,-44,-45,-46,19,19,-58,19,-60,19,-63,-64,-15,-38,-49,-48,19,-47,19,19,-71,19,-53,-56,-57,-59,-61,-39,19,-66,19,19,-3,-12,-3,-21,-14,-19,-23,19,19,-22,19,-3,-20,]),'BOOL':([0,2,5,7,9,10,11,12,13,16,18,19,20,21,22,24,25,27,29,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,60,61,68,70,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,107,109,112,113,114,115,116,119,130,133,134,141,142,143,145,147,148,149,151,152,153,157,158,160,161,],[20,20,-32,-6,-8,-9,-11,-13,20,20,-31,-33,-34,-35,-36,20,-54,-62,20,20,-5,-7,20,20,20,20,20,20,20,20,20,-37,-55,20,20,20,20,20,20,20,-65,-4,-43,-44,-45,-46,20,20,-58,20,-60,20,-63,-64,-15,-38,-49,-48,20,-47,20,20,-71,20,-53,-56,-57,-59,-61,-39,20,-66,20,20,-3,-12,-3,-21,-14,-19,-23,20,20,-22,20,-3,-20,]),'NULL':([0,2,5,7,9,10,11,12,13,16,18,19,20,21,22,24,25,27,29,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,60,61,68,70,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,107,109,112,113,114,115,116,119,130,133,134,141,142,143,145,147,148,149,151,152,153,157,158,160,161,],[21,21,-32,-6,-8,-9,-11,-13,21,21,-31,-33,-34,-35,-36,21,-54,-62,21,21,-5,-7,21,21,21,21,21,21,21,21,21,-37,-55,21,21,21,21,21,21,21,-65,-4,-43,-44,-45,-46,21,21,-58,21,-60,21,-63,-64,-15,-38,-49,-48,21,-47,21,21,-71,21,-53,-56,-57,-59,-61,-39,21,-66,21,21,-3,-12,-3,-21,-14,-19,-23,21,21,-22,21,-3,-20,]),'ID':([0,2,5,7,9,10,11,12,13,16,17,18,19,20,21,22,24,25,27,29,31,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,60,61,68,70,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,107,109,111,112,113,114,115,116,119,130,131,133,134,135,141,142,143,145,147,148,149,151,152,153,157,158,160,161,],[23,23,-32,-6,-8,-9,-11,-13,49,55,57,-31,-33,-34,-35,-36,49,-54,-62,49,73,49,-5,-7,49,49,49,49,49,49,49,49,49,-37,-55,49,49,49,49,49,49,49,-65,-4,-43,-44,-45,-46,49,49,-58,49,-60,49,-63,-64,-15,-38,-49,-48,49,-47,49,23,-71,49,127,-53,-56,-57,-59,-61,-39,23,57,-66,23,127,23,-3,-12,-3,-21,-14,-19,-23,49,23,-22,23,-3,-20,]),'LPAREN':([0,2,5,7,9,10,11,12,13,15,16,18,19,20,21,22,23,24,25,27,29,30,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,55,60,61,68,70,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,107,109,112,113,114,115,116,119,130,133,134,141,142,143,145,146,147,148,149,151,152,153,157,158,160,161,],[16,16,-32,-6,-8,-9,-11,-13,16,52,16,-31,-33,-34,-35,-36,60,16,-54,-62,16,72,16,-5,-7,16,16,16,16,16,16,16,16,16,60,-55,16,16,60,16,16,16,16,16,111,-65,-4,-43,-44,-45,-46,16,16,-58,16,-60,16,-63,-64,-15,-38,-49,-48,16,-47,16,16,-71,16,-53,-56,-57,-59,-61,-39,16,-66,16,16,-3,-12,-3,152,-21,-14,-19,-23,16,16,-22,16,-3,-20,]),'LBRACKET':([0,2,5,7,8,9,10,11,12,13,16,18,19,20,21,22,23,24,25,26,27,29,32,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,55,60,61,64,68,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,98,99,100,101,107,109,110,112,113,114,115,116,118,119,120,125,130,133,134,141,142,143,145,147,148,149,151,152,153,154,157,158,160,161,],[24,24,-32,-6,37,-8,-9,-11,-13,24,24,-31,-33,-34,-35,-36,61,24,-54,61,-62,24,24,-5,-7,24,24,24,24,24,24,24,24,24,37,-37,-55,24,24,37,61,24,24,37,24,109,24,37,-4,37,-43,-44,-45,-46,24,24,37,24,37,24,37,37,-15,37,37,-38,-49,-48,24,37,-47,24,24,-71,24,37,-53,37,37,37,37,37,-39,61,37,24,-66,24,24,-3,-12,-3,-21,-14,-19,-23,24,24,37,-22,24,-3,-20,]),'LBRACE':([0,2,5,7,9,10,11,12,13,16,18,19,20,21,22,24,25,27,29,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,60,61,66,67,68,70,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,102,103,104,105,107,109,112,113,114,115,116,117,119,123,124,126,130,133,134,136,141,142,143,145,147,148,149,150,151,152,153,156,157,158,160,161,],[17,17,-32,-6,-8,-9,-11,-13,17,17,-31,-33,-34,-35,-36,17,-54,-62,17,17,-5,-7,17,17,17,17,17,17,17,17,17,-37,-55,17,17,17,17,101,-3,17,17,17,-65,-4,-43,-44,-45,-46,17,17,-58,17,-60,17,-63,-64,-15,-38,-49,-48,17,-47,17,17,-3,-67,-3,-70,-71,17,-53,-56,-57,-59,-61,130,-39,-69,-68,134,17,-66,17,141,17,-3,-12,-3,-21,-14,-19,153,-23,17,17,158,-22,17,-3,-20,]),'PLACEHOLDER':([0,2,5,7,9,10,11,12,13,16,18,19,20,21,22,24,25,27,29,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,60,61,67,68,70,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,102,104,107,109,112,113,114,115,116,119,130,133,134,141,142,143,145,147,148,149,151,152,153,157,158,160,161,],[26,26,-32,-6,-8,-9,-11,-13,50,26,-31,-33,-34,-35,-36,50,-54,-62,50,50,-5,-7,50,50,50,50,50,50,50,50,50,-37,-55,50,50,50,50,104,50,50,50,-65,-4,-43,-44,-45,-46,50,50,-58,50,-60,50,-63,-64,-15,-38,-49,-48,50,-47,50,26,104,104,-71,50,-53,-56,-57,-59,-61,-39,26,-66,26,26,-3,-12,-3,-21,-14,-19,-23,50,26,-22,26,-3,-20,]),'MAC':([0,2,7,9,10,11,12,16,35,36,75,89,101,107,130,133,134,141,142,143,145,147,148,149,151,153,157,158,160,161,],[28,28,-6,-8,-9,-11,-13,28,-5,-7,-4,-15,28,-71,28,-66,28,28,-3,-12,-3,-21,-14,-19,-23,28,-22,28,-3,-20,]),'ATOM':([0,2,5,7,9,10,11,12,16,18,19,20,21,22,25,27,28,29,35,36,49,50,67,68,70,74,75,77,78,79,80,83,85,87,88,89,93,94,95,99,101,102,104,107,112,113,114,115,116,119,130,133,134,141,142,143,145,147,148,149,151,153,157,158,160,161,],[29,29,-32,-6,-8,-9,-11,-13,29,-31,-33,-34,-35,-36,-54,-62,67,68,-5,-7,-37,-55,102,68,68,-65,-4,-43,-44,-45,-46,-58,-60,-63,-64,-15,-38,-49,-48,-47,29,102,102,-71,-53,-56,-57,-59,-61,-39,29,-66,29,29,-3,-12,-3,-21,-14,-19,-23,29,-22,29,-3,-20,]),'WHILE':([0,2,7,9,10,11,12,16,35,36,75,89,101,107,130,133,134,141,142,143,145,147,148,149,151,153,157,158,160,161,],[30,30,-6,-8,-9,-11,-13,30,-5,-7,-4,-15,30,-71,30,-66,30,30,-3,-12,-3,-21,-14,-19,-23,30,-22,30,-3,-20,]),'FUN':([0,2,7,9,10,11,12,16,35,36,75,89,101,107,130,133,134,141,142,143,145,147,148,149,151,153,157,158,160,161,],[31,31,-6,-8,-9,-11,-13,31,-5,-7,-4,-15,31,-71,31,-66,31,31,-3,-12,-3,-21,-14,-19,-23,31,-22,31,-3,-20,]),'NOT':([0,2,5,7,9,10,11,12,13,16,18,19,20,21,22,24,25,27,29,32,35,36,37,38,39,40,41,44,45,46,47,49,50,51,52,60,61,68,70,72,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,99,100,101,107,109,112,113,114,115,116,119,130,133,134,141,142,143,145,147,148,149,151,152,153,157,158,160,161,],[32,32,-32,-6,-8,-9,-11,-13,32,32,-31,-33,-34,-35,-36,32,-54,-62,32,32,-5,-7,32,32,32,32,32,32,32,32,32,-37,-55,32,32,32,32,32,32,32,-65,-4,-43,-44,-45,-46,32,32,-58,32,-60,32,-63,-64,-15,-38,-49,-48,32,-47,32,32,-71,32,-53,-56,-57,-59,-61,-39,32,-66,32,32,-3,-12,-3,-21,-14,-19,-23,32,32,-22,32,-3,-20,]),'RPAREN':([2,3,5,7,9,10,11,12,16,18,19,20,21,22,25,26,27,33,35,36,49,50,53,54,55,60,63,64,74,75,77,78,79,80,83,85,87,88,89,92,93,94,95,97,99,100,107,110,111,112,113,114,115,116,119,121,127,128,129,133,135,140,142,143,145,147,148,149,151,154,157,160,161,],[-3,-2,-32,-6,-8,-9,-11,-13,-3,-31,-33,-34,-35,-36,-54,-55,-62,-1,-5,-7,-37,-55,93,94,-37,-3,-40,-41,-65,-4,-43,-44,-45,-46,-58,-60,-63,-64,-15,117,-38,-49,-48,119,-47,-3,-71,126,-3,-53,-56,-57,-59,-61,-39,-42,-16,136,-18,-66,-3,-17,-3,-12,-3,-21,-14,-19,-23,156,-22,-3,-20,]),'RBRACE':([2,3,5,7,9,10,11,12,17,18,19,20,21,22,25,27,33,35,36,49,50,56,58,74,75,77,78,79,80,83,85,87,88,89,93,94,95,99,101,107,112,113,114,115,116,118,119,122,130,131,133,134,137,138,139,141,142,143,144,145,147,148,149,151,153,155,157,158,159,160,161,],[-3,-2,-32,-6,-8,-9,-11,-13,-3,-31,-33,-34,-35,-36,-54,-62,-1,-5,-7,-37,-55,95,-52,-65,-4,-43,-44,-45,-46,-58,-60,-63,-64,-15,-38,-49,-48,-47,-3,-71,-53,-56,-57,-59,-61,-50,-39,133,-3,-3,-66,-3,142,-51,143,-3,-3,-12,148,-3,-21,-14,-19,-23,-3,157,-22,-3,160,-3,-20,]),'SEMICOLON':([5,6,8,18,19,20,21,22,23,25,26,27,29,34,48,49,50,53,55,68,69,70,71,74,77,78,79,80,83,85,87,88,90,91,93,94,95,99,106,108,112,113,114,115,116,119,],[-32,35,36,-31,-33,-34,-35,-36,-37,-54,-55,-62,-3,75,89,-37,-55,36,-37,-3,107,-3,-74,-65,-43,-44,-45,-46,-58,-60,-63,-64,-10,-24,-38,-49,-48,-47,-72,-73,-53,-56,-57,-59,-61,-39,]),'PLUS':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,38,-31,-33,-34,-35,-36,-37,-54,-55,-62,38,-37,-55,38,-37,38,38,38,38,-43,-44,-45,-46,38,38,38,38,38,38,-38,-49,-48,38,-47,38,-53,38,38,38,38,38,-39,38,38,]),'MINUS':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,39,-31,-33,-34,-35,-36,-37,-54,-55,-62,39,-37,-55,39,-37,39,39,39,39,-43,-44,-45,-46,39,39,39,39,39,39,-38,-49,-48,39,-47,39,-53,39,39,39,39,39,-39,39,39,]),'MULTIPLY':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,40,-31,-33,-34,-35,-36,-37,-54,-55,-62,40,-37,-55,40,-37,40,40,40,40,40,40,-45,-46,40,40,40,40,40,40,-38,-49,-48,40,-47,40,-53,40,40,40,40,40,-39,40,40,]),'DIVIDE':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,41,-31,-33,-34,-35,-36,-37,-54,-55,-62,41,-37,-55,41,-37,41,41,41,41,41,41,-45,-46,41,41,41,41,41,41,-38,-49,-48,41,-47,41,-53,41,41,41,41,41,-39,41,41,]),'EQUAL':([5,8,14,18,19,20,21,22,23,25,26,27,42,43,44,45,48,49,50,53,55,59,64,65,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,120,125,132,154,],[-32,42,51,-31,-33,-34,-35,-36,-25,-54,-27,-62,81,82,84,86,42,-37,-55,42,-25,-26,42,-28,42,42,42,-43,-44,-45,-46,42,42,42,42,42,42,-38,-49,-48,42,-47,42,-53,42,42,42,42,42,-39,-29,42,-30,42,]),'BANG':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,43,-31,-33,-34,-35,-36,-37,-54,-55,-62,43,-37,-55,43,-37,43,43,43,43,-43,-44,-45,-46,43,43,43,43,43,43,-38,-49,-48,43,-47,43,-53,43,43,43,43,43,-39,43,43,]),'GT':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,44,-31,-33,-34,-35,-36,-37,-54,-55,-62,44,-37,-55,44,-37,44,44,44,44,-43,-44,-45,-46,44,44,44,44,44,44,-38,-49,-48,44,-47,44,-53,44,44,44,44,44,-39,44,44,]),'LT':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,45,-31,-33,-34,-35,-36,-37,-54,-55,-62,45,-37,-55,45,-37,45,45,45,45,-43,-44,-45,-46,45,45,45,45,45,45,-38,-49,-48,45,-47,45,-53,45,45,45,45,45,-39,45,45,]),'AND':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,46,-31,-33,-34,-35,-36,-37,-54,-55,-62,46,-37,-55,46,-37,46,46,46,46,-43,-44,-45,-46,46,46,46,46,46,46,-38,-49,-48,46,-47,46,-53,46,46,46,46,46,-39,46,46,]),'OR':([5,8,18,19,20,21,22,23,25,26,27,48,49,50,53,55,64,70,74,76,77,78,79,80,83,85,87,88,91,92,93,94,95,98,99,110,112,113,114,115,116,118,119,125,154,],[-32,47,-31,-33,-34,-35,-36,-37,-54,-55,-62,47,-37,-55,47,-37,47,47,47,47,-43,-44,-45,-46,47,47,47,47,47,47,-38,-49,-48,47,-47,47,-53,47,47,47,47,47,-39,47,47,]),'COMMA':([5,18,19,20,21,22,25,27,49,50,64,74,77,78,79,80,83,85,87,88,93,94,95,99,112,113,114,115,116,118,119,125,127,],[-32,-31,-33,-34,-35,-36,-54,-62,-37,-55,100,-65,-43,-44,-45,-46,-58,-60,-63,-64,-38,-49,-48,-47,-53,-56,-57,-59,-61,131,-39,100,135,]),'RBRACKET':([5,18,19,20,21,22,24,25,27,49,50,62,63,64,74,76,77,78,79,80,83,85,87,88,93,94,95,98,99,100,109,112,113,114,115,116,119,121,125,],[-32,-31,-33,-34,-35,-36,-3,-54,-62,-37,-55,99,-40,-41,-65,112,-43,-44,-45,-46,-58,-60,-63,-64,-38,-49,-48,120,-47,-3,-3,-53,-56,-57,-59,-61,-39,-42,112,]),'COLON':([57,],[96,]),'ELIF':([142,160,],[146,146,]),'ELSE':([142,145,147,160,161,],[-3,150,-21,-3,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,2,16,101,130,134,141,153,158,],[1,33,54,122,137,139,144,155,159,]),'statement':([0,2,16,101,130,134,141,153,158,],[2,2,2,2,2,2,2,2,2,]),'empty':([0,2,16,17,24,29,60,67,68,70,100,101,102,104,109,111,130,131,134,135,141,142,145,153,158,160,],[3,3,3,58,63,71,63,105,71,71,63,3,105,105,63,129,3,58,3,129,3,147,151,3,3,147,]),'assignment':([0,2,16,101,130,134,141,153,158,],[6,6,6,6,6,6,6,6,6,]),'conditional':([0,2,16,101,130,134,141,153,158,],[7,7,7,7,7,7,7,7,7,]),'expr':([0,2,13,16,24,29,32,37,38,39,40,41,44,45,46,47,51,52,60,61,68,70,72,81,82,84,86,96,100,101,109,130,134,141,152,153,158,],[8,8,48,53,64,70,74,76,77,78,79,80,83,85,87,88,91,92,64,98,70,70,110,113,114,115,116,118,64,8,125,8,8,8,154,8,8,]),'macro_def':([0,2,16,101,130,134,141,153,158,],[9,9,9,9,9,9,9,9,9,]),'macro_call':([0,2,16,101,130,134,141,153,158,],[10,10,10,10,10,10,10,10,10,]),'loop':([0,2,16,101,130,134,141,153,158,],[11,11,11,11,11,11,11,11,11,]),'fun_def':([0,2,16,101,130,134,141,153,158,],[12,12,12,12,12,12,12,12,12,]),'l_value':([0,2,16,101,130,134,141,153,158,],[14,14,14,14,14,14,14,14,14,]),'alg_op':([0,2,13,16,24,29,32,37,38,39,40,41,44,45,46,47,51,52,60,61,68,70,72,81,82,84,86,96,100,101,109,130,134,141,152,153,158,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'func_call':([0,2,13,16,24,29,32,37,38,39,40,41,44,45,46,47,51,52,60,61,68,70,72,81,82,84,86,96,100,101,109,130,134,141,152,153,158,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'comp_op':([0,2,13,16,24,29,32,37,38,39,40,41,44,45,46,47,51,52,60,61,68,70,72,81,82,84,86,96,100,101,109,130,134,141,152,153,158,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'log_op':([0,2,13,16,24,29,32,37,38,39,40,41,44,45,46,47,51,52,60,61,68,70,72,81,82,84,86,96,100,101,109,130,134,141,152,153,158,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'record_list':([17,131,],[56,138,]),'fields':([23,26,55,120,],[59,65,59,132,]),'arg_list':([24,60,100,109,],[62,97,121,62,]),'macro_def_arg_list':([28,],[66,]),'macro_arg_list':([29,68,70,],[69,106,108,]),'r_value':([51,],[90,]),'macro_def_arg_list_rec':([67,102,104,],[103,123,124,]),'id_list':([111,135,],[128,140,]),'conditional_elif':([142,160,],[145,161,]),'conditional_else':([145,],[149,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','parse.py',14),
  ('statement_list -> empty','statement_list',1,'p_statement_list','parse.py',15),
  ('empty -> <empty>','empty',0,'p_empty','parse.py',24),
  ('statement -> IMPORT STRING SEMICOLON','statement',3,'p_statement_import','parse.py',28),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement_assignment','parse.py',32),
  ('statement -> conditional','statement',1,'p_statement_conditional','parse.py',36),
  ('statement -> expr SEMICOLON','statement',2,'p_statement_expr','parse.py',40),
  ('statement -> macro_def','statement',1,'p_statement_macro_def','parse.py',44),
  ('statement -> macro_call','statement',1,'p_statement_macro_call','parse.py',48),
  ('assignment -> l_value EQUAL r_value','assignment',3,'p_assignment','parse.py',52),
  ('statement -> loop','statement',1,'p_statement_loop','parse.py',56),
  ('loop -> WHILE LPAREN expr RPAREN LBRACE statement_list RBRACE','loop',7,'p_loop','parse.py',60),
  ('statement -> fun_def','statement',1,'p_statement_fun_def','parse.py',64),
  ('fun_def -> FUN ID LPAREN id_list RPAREN LBRACE statement_list RBRACE','fun_def',8,'p_fun_def','parse.py',68),
  ('statement -> RETURN expr SEMICOLON','statement',3,'p_statement_return','parse.py',72),
  ('id_list -> ID','id_list',1,'p_id_list_single','parse.py',76),
  ('id_list -> ID COMMA id_list','id_list',3,'p_id_list_multi','parse.py',80),
  ('id_list -> empty','id_list',1,'p_id_list_empty','parse.py',84),
  ('conditional -> IF LPAREN expr RPAREN LBRACE statement_list RBRACE conditional_elif conditional_else','conditional',9,'p_conditional_full','parse.py',88),
  ('conditional_elif -> ELIF LPAREN expr RPAREN LBRACE statement_list RBRACE conditional_elif','conditional_elif',8,'p_conditional_elif','parse.py',93),
  ('conditional_elif -> empty','conditional_elif',1,'p_conditional_elif_empty','parse.py',97),
  ('conditional_else -> ELSE LBRACE statement_list RBRACE','conditional_else',4,'p_conditional_else','parse.py',101),
  ('conditional_else -> empty','conditional_else',1,'p_conditional_else_empty','parse.py',105),
  ('r_value -> expr','r_value',1,'p_r_value','parse.py',109),
  ('l_value -> ID','l_value',1,'p_l_value_id','parse.py',113),
  ('l_value -> ID fields','l_value',2,'p_l_value_record','parse.py',117),
  ('l_value -> PLACEHOLDER','l_value',1,'p_l_value_placeholder','parse.py',121),
  ('l_value -> PLACEHOLDER fields','l_value',2,'p_l_value_placeholder_record','parse.py',125),
  ('fields -> LBRACKET expr RBRACKET','fields',3,'p_fields_single','parse.py',128),
  ('fields -> LBRACKET expr RBRACKET fields','fields',4,'p_fields_multi','parse.py',132),
  ('expr -> alg_op','expr',1,'p_expr','parse.py',136),
  ('expr -> STRING','expr',1,'p_expr_string','parse.py',140),
  ('expr -> NUMBER','expr',1,'p_expr_number','parse.py',144),
  ('expr -> BOOL','expr',1,'p_expr_bool','parse.py',148),
  ('expr -> NULL','expr',1,'p_expr_null','parse.py',152),
  ('expr -> func_call','expr',1,'p_expr_func_call','parse.py',156),
  ('expr -> ID','expr',1,'p_expr_id','parse.py',160),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','parse.py',164),
  ('func_call -> ID LPAREN arg_list RPAREN','func_call',4,'p_func_call','parse.py',168),
  ('arg_list -> empty','arg_list',1,'p_arg_list_empty','parse.py',172),
  ('arg_list -> expr','arg_list',1,'p_arg_list_single','parse.py',176),
  ('arg_list -> expr COMMA arg_list','arg_list',3,'p_arg_list_multi','parse.py',180),
  ('alg_op -> expr PLUS expr','alg_op',3,'p_alg_op','parse.py',187),
  ('alg_op -> expr MINUS expr','alg_op',3,'p_alg_op','parse.py',188),
  ('alg_op -> expr MULTIPLY expr','alg_op',3,'p_alg_op','parse.py',189),
  ('alg_op -> expr DIVIDE expr','alg_op',3,'p_alg_op','parse.py',190),
  ('expr -> LBRACKET arg_list RBRACKET','expr',3,'p_expr_list','parse.py',201),
  ('expr -> LBRACE record_list RBRACE','expr',3,'p_expr_object','parse.py',205),
  ('expr -> LPAREN statement_list RPAREN','expr',3,'p_expr_sequence','parse.py',209),
  ('record_list -> ID COLON expr','record_list',3,'p_record_list_single','parse.py',213),
  ('record_list -> ID COLON expr COMMA record_list','record_list',5,'p_record_list_multi','parse.py',217),
  ('record_list -> empty','record_list',1,'p_record_list_empty','parse.py',221),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_expr_access','parse.py',225),
  ('expr -> comp_op','expr',1,'p_expr_comp_op','parse.py',229),
  ('expr -> PLACEHOLDER','expr',1,'p_expr_placeholder','parse.py',233),
  ('comp_op -> expr EQUAL EQUAL expr','comp_op',4,'p_comp_op_eq','parse.py',237),
  ('comp_op -> expr BANG EQUAL expr','comp_op',4,'p_comp_op_neq','parse.py',241),
  ('comp_op -> expr GT expr','comp_op',3,'p_comp_op_gt','parse.py',245),
  ('comp_op -> expr GT EQUAL expr','comp_op',4,'p_comp_op_gte','parse.py',249),
  ('comp_op -> expr LT expr','comp_op',3,'p_comp_op_lt','parse.py',253),
  ('comp_op -> expr LT EQUAL expr','comp_op',4,'p_comp_op_lte','parse.py',257),
  ('expr -> log_op','expr',1,'p_expr_log_op','parse.py',261),
  ('log_op -> expr AND expr','log_op',3,'p_log_op_and','parse.py',265),
  ('log_op -> expr OR expr','log_op',3,'p_log_op_or','parse.py',269),
  ('log_op -> NOT expr','log_op',2,'p_log_op_not','parse.py',273),
  ('macro_def -> MAC macro_def_arg_list LBRACE statement_list RBRACE','macro_def',5,'p_macro_def','parse.py',277),
  ('macro_def_arg_list -> ATOM macro_def_arg_list_rec','macro_def_arg_list',2,'p_macro_def_arg_list_start_atom','parse.py',281),
  ('macro_def_arg_list_rec -> PLACEHOLDER macro_def_arg_list_rec','macro_def_arg_list_rec',2,'p_macro_def_arg_list_rec_placeholder','parse.py',285),
  ('macro_def_arg_list_rec -> ATOM macro_def_arg_list_rec','macro_def_arg_list_rec',2,'p_macro_def_arg_list_rec_atom','parse.py',289),
  ('macro_def_arg_list_rec -> empty','macro_def_arg_list_rec',1,'p_macro_def_arg_list_rec_empty','parse.py',293),
  ('macro_call -> ATOM macro_arg_list SEMICOLON','macro_call',3,'p_macro_call_atom_start','parse.py',297),
  ('macro_arg_list -> ATOM macro_arg_list','macro_arg_list',2,'p_macro_call_arg_list_atom','parse.py',301),
  ('macro_arg_list -> expr macro_arg_list','macro_arg_list',2,'p_macro_call_arg_list_expr','parse.py',305),
  ('macro_arg_list -> empty','macro_arg_list',1,'p_macro_call_arg_list_empty','parse.py',309),
]
